openapi: 3.1.0
info:
  title: Verum Omnis Web API
  version: "1.0.0"
servers:
  - url: https://YOUR_HOST/api
paths:
  /v1/verify:
    get:
      summary: Return signed core manifest
      responses: { "200": { description: OK } }
  /v1/verify-rules:
    get:
      summary: Return signed rules manifest
      responses: { "200": { description: OK } }
  /v1/anchor:
    post:
      summary: Issue a signed anchor receipt for a SHA-512
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [hash]
              properties:
                hash: { type: string, minLength: 64 }
      responses: { "200": { description: Signed receipt } }
  /v1/receipt:
    get:
      summary: Fetch a signed receipt for a SHA-512
      parameters:
        - in: query
          name: hash
          required: true
          schema: { type: string, minLength: 64 }
      responses: { "200": { description: Signed receipt } }
  /v1/seal:
    post:
      summary: Generate a Verum Omnis sealed PDF
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [hash]
              properties:
                hash: { type: string }
                title: { type: string }
                notes: { type: string }
      responses:
        "200":
          description: PDF
          content:
            application/pdf: {}
  /v1/chat:
    post:
      summary: Verum-mode chat (triple consensus)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [messages]
              properties:
                provider: { type: string, enum: [openai, anthropic, deepseek] }
                model: { type: string }
                temperature: { type: number, minimum: 0, maximum: 2 }
                messages:
                  type: array
                  items:
                    type: object
                    required: [role, content]
                    properties:
                      role: { type: string, enum: [system, user, assistant] }
                      content: { type: string }
  /health:
    get:
      summary: Health
      responses: { "200": { description: OK } }
